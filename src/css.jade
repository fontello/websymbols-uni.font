| @charset "UTF-8";
| 
| @font-face {
|   font-family: '#{font.fontname}';
|   src: url('#{font.fontname}.eot');
|   src: url('#{font.fontname}.eot?#iefix') format('embedded-opentype'),
|        url('#{font.fontname}.woff') format('woff'),
|        url('#{font.fontname}.ttf') format('truetype'),
|        url('#{font.fontname}.svg##{font.fontname}') format('svg');
|   font-weight: normal; font-style: normal;
| }
| 
| [class^="icon-"], [class*=" icon-"] {
|   font-family: #{font.fontname};
|   font-style: normal;
| /*  font-size: 14px; */
|   display: inline-block;
|   width: 1.1em;
|   margin-right: .1em;
|   text-align: center;
| }
| 
| .the-icons li {
|   font-size: 14px;
|   line-height: 24px;
|   height: 24px;
| }
| 
- var to_char = function (code) { if (code > 0xffff) { code -= 0x10000; var surrogate1 = 0xd800 + (code >> 10), surrogate2 = 0xdc00 + (code & 0x3ff); return String.fromCharCode(surrogate1, surrogate2); } else { return String.fromCharCode(code); } }
- each g in glyphs
  - var css_class = demo.css_prefix + (g.css || g.file)
  | .#{css_class}:before { content: "#{to_char(g.code)}" } /* '\\ #{g.code.toString(16)}' */
